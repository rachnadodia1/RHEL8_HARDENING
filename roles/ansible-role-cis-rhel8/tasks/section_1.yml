---
- name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: "^(#)?\\s*install\\s+cramfs(\\s*|$)"
    line: "install cramfs /bin/true"
    state: present
    owner: root
    group: root
    mode: 0644
    create: true
  when:
      - cis_rhel8_1_1_1_1
  tags:
    - scored
    - level1
    - section1

- name: 1.1.1.2 Ensure mounting of vFAT filesystems is limited (Not Scored)
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: "^(#)?\\s*install\\s+vfat(\\s*|$)"
    line: "install vfat /bin/true"
    state: present
    owner: root
    group: root
    mode: 0644
    create: true
  when:
      - cis_rhel8_1_1_1_2
  tags:
    - notscored
    - level2
    - section1

- name: 1.1.1.3 Ensure mounting of squashfs filesystems is disabled (Scored)
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: "^(#)?\\s*install\\s+squashfs(\\s*|$)"
    line: "install squashfs /bin/true"
    state: present
    owner: root
    group: root
    mode: 0644
    create: true
  when:
    - cis_rhel8_1_1_1_3
  tags:
    - scored
    - level1
    - section1

- name: 1.1.1.4 Ensure mounting of udf filesystems is disabled (Scored)
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: "^(#)?\\s*install\\s+udf(\\s*|$)"
    line: "install udf /bin/true"
    state: present
    owner: root
    group: root
    mode: 0644
    create: true
  when:
    - cis_rhel8_1_1_1_4
  tags:
    - scored
    - level1
    - section1

- name: 1.1.6 Ensure separate partition exists for /var (Scored)
  command: /bin/true
  changed_when: false
  when:
    - cis_rhel8_1_1_6
  tags:
    - scored
    - level2
    - section1
    - notimplemented

- name: "1.1.7 Ensure separate partition exists for /var/tmp (Scored)\n
  1.1.8 Ensure nodev option set on /var/tmp partition (Scored)\n
  1.1.9 Ensure nosuid option set on /var/tmp partition (Scored)\n
  1.1.10 Ensure noexec option set on /var/tmp partition (Scored)"
  mount:
    name: "/var/tmp"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "defaults{% if cis_rhel8_1_1_8 %},nodev{% endif %}{% if  cis_rhel8_1_1_9 %},nosuid{% endif %}{% if cis_rhel8_1_1_10 %},noexec{% endif %}"
  with_items: "{{ ansible_mounts }}"
  when:
    - item.mount == "/var/tmp"
    - cis_rhel8_1_1_7
    - cis_rhel8_1_1_8 or cis_rhel8_1_1_9 or cis_rhel8_1_1_10
  tags:
    - scored
    - level2
    - section1

- name: 1.1.11 Ensure separate partition exists for /var/log (Scored)
  command: /bin/true
  changed_when: false
  when:
    - cis_rhel8_1_1_11
  tags:
    - scored
    - level2
    - section1
    - notimplemented

- name: 1.1.12 Ensure separate partition exists for /var/log/audit (Scored)
  command: /bin/true
  changed_when: false
  when:
    - cis_rhel8_1_1_12
  tags:
    - scored
    - level2
    - section1
    - notimplemented

- name: "1.1.13 Ensure separate partition exists for /home (Scored)\n
  1.1.14 Ensure nodev option set on /home partition (Scored)"
  mount:
    name: "/home"
    src: "{{ item.device }}"
    state: mounted
    fstype: "{{ item.fstype }}"
    opts: "defaults,nodev"
  with_items: "{{ ansible_mounts }}"
  when:
    - item.mount == "/home"
    - cis_rhel8_1_1_13
    - cis_rhel8_1_1_14
  tags:
    - scored
    - level1
    - section1

- name: "1.1.15 Ensure nodev option set on /dev/shm partition (Scored)\n
  1.1.16 Ensure nosuid option set on /dev/shm partition (Scored)\n
  1.1.17 Ensure noexec option set on /dev/shm partition (Scored)"
  mount:
    name: /dev/shm
    src: tmpfs
    state: mounted
    fstype: tmpfs
    opts: >
      "defaults,size={{ cis_rhel8_shm_size }}{%
      if cis_rhel8_1_1_15 %},nodev{% endif %}{%
      if cis_rhel8_1_1_16 %},nosuid{% endif %}{%
      if cis_rhel8_1_1_17 %},noexec{% endif %}"
  when:
    - item.mount == "/dev/shm"
    - cis_rhel8_1_1_15
    - cis_rhel8_1_1_16 or cis_rhel8_1_1_17 or cis_rhel8_1_1_18
    - ansible_virtualization_type != "docker"
  with_items: "{{ ansible_mounts }}"
  tags:
    - scored
    - level1
    - section1

- name: "1.1.18 Ensure nodev option set on removable media partitions (Not Scored)\n
  1.1.19 Ensure nosuid option set on removable media partitions (Not Scored)\n
  1.1.20 Ensure noexec option set on removable media partitions (Not Scored)"
  debug:
    msg: "Not relevant"
  changed_when: false
  failed_when: false
  when:
    - cis_rhel8_1_1_18
    - cis_rhel8_1_1_19
    - cis_rhel8_1_1_20
  tags:
    - notscored
    - level1
    - section1

- name: 1.1.21 Ensure sticky bit is set on all world-writable directories (Scored) - find directories
  shell: |
    set -o pipefail
    df --local -P | awk '{if (NR!=1) print $6}' | xargs -I '{}' find '{}' -xdev -type d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
  args:
    executable: /bin/bash
  changed_when: false
  register: world_writable_dir
  when: cis_rhel8_1_1_21
  tags:
    - scored
    - level1
    - section1

- name: 1.1.21 Ensure sticky bit is set on all world-writable directories (Scored) - fix permission
  file:
    dest: "{{ item }}"
    mode: a+t
  when:
    - cis_rhel8_1_1_21
    - world_writable_dir.stdout_lines | length > 0
  tags:
    - scored
    - level1
    - section1
  with_items:
    - "{{ world_writable_dir.stdout_lines }}"

- name: 1.1.22 Disable Automounting (Scored)
  service:
    name: autofs
    enabled: false
    state: stopped
  when:
    - cis_rhel8_1_1_22
    - "'autofs' in ansible_facts.packages"
  tags:
    - scored
    - level1
    - section1

- name: 1.1.23 Disable USB Storage (Scored)
  lineinfile:
    dest: /etc/modprobe.d/cis.conf
    regexp: "^(#)?\\s*install\\s+usb-storage(\\s*|$)"
    line: "install usb-storage /bin/true"
    state: present
    owner: root
    group: root
    mode: 0644
    create: true
  when:
    - cis_rhel8_1_1_23
  tags:
    - scored
    - level1
    - section1

- name: 1.2.1 Ensure Red Hat Subscription Manager connection is configured (Not Scored)
  command: subscription-manager identity
  changed_when: false
  failed_when: false
  when:
    - cis_rhel8_1_2_1
  tags:
    - notscored
    - level1
    - section1

- name: 1.2.2 Disable the rhnsd Daemon (Not Scored)
  service:
    name: rhnsd
    state: stopped
    enabled: false
  when:
    - cis_rhel8_1_2_2
    - "'rhnsd' in ansible_facts.packages"
  tags:
    - notscored
    - level1
    - section1

- name: 1.2.3 Ensure GPG keys are configured (Not Scored)
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  changed_when: false
  failed_when: false # test using centos, key is /etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial
  when:
    - cis_rhel8_1_2_3
  tags:
    - notscored
    - level1
    - section1

- name: 1.2.4 Ensure gpgcheck is globally activated (Scored)
  block:
    - name: 1.2.4 Ensure gpgcheck is globally activated (Scored) - find repositories
      shell: |
        set -o pipefail
        "grep -EH '\[.*\]' /etc/yum.repos.d/*.repo | grep -v '#' | sed 's/\[\(.*\)\]/\1/g'"
      register: yum_repositories
      changed_when: false
      failed_when: false

    - name: 1.2.4 Ensure gpgcheck is globally activated (Scored) - fix main configuration
      replace:
        dest: /etc/yum.conf
        regexp: '^\s*(gpgcheck\s*=\s*)0$'
        replace: '\g<1>1'

    - name: 1.2.4 Ensure gpgcheck is globally activated (Scored) - fix repo configuration
      ini_file:
        path: "{{ item.split(':')[0] }}"
        section: "{{ item.split(':')[1] }}"
        option: gpgcheck
        value: '1'
        no_extra_spaces: true
      with_items: "{{ yum_repositories.stdout_lines }}"
      when:
        - yum_repositories.stdout_lines | length > 0
  when:
    - cis_rhel8_1_2_4
  tags:
    - scored
    - level1
    - section1

- name: 1.2.5 Ensure package manager repositories are configured (Not Scored)
  command: dnf repolist
  changed_when: false
  failed_when: false
  args:
    warn: false
  when:
    - cis_rhel8_1_2_5
  tags:
    - notscored
    - level1
    - section1

- name: 1.3.1 Ensure sudo is installed (Scored)
  yum:
    name: sudo
    state: present
  when:
    - cis_rhel8_1_3_1
  tags:
    - scored
    - level1
    - section1

- name: 1.3.2 Ensure sudo commands use pty (Scored)
  block:
  - name: 1.3.2 Ensure sudo commands use pty (Scored) - search config
    command: grep -Er '^\s*Defaults\s+([^#]+,\s*)?use_pty\s*=' /etc/sudoers /etc/sudoers.d
    register: use_pty
    changed_when: false
    failed_when: false

  - name: 1.3.2 Ensure sudo commands use pty (Scored) - write config
    lineinfile:
      dest: /etc/sudoers.d/{{ cis_rhel8_sudoers_file }}
      line: "Defaults use_pty"
      state: present
      owner: root
      group: root
      mode: 0400
      create: true
    when:
      - use_pty.rc == 1
  when:
    - cis_rhel8_1_3_2
  tags:
    - scored
    - level1
    - section1

- name: 1.3.3 Ensure sudo log file exists (Scored)
  block:
  - name: 1.3.3 Ensure sudo log file exists (Scored) - search config
    command: grep -Er '^\s*Defaults\s+([^#]+,\s*)?logfile\s*=' /etc/sudoers /etc/sudoers.d
    register: sudo_logfiles
    changed_when: false
    failed_when: false

  - name: 1.3.3 Ensure sudo log file exists (Scored) - write config
    lineinfile:
      dest: /etc/sudoers.d/{{ cis_rhel8_sudoers_file }}
      line: 'Defaults logfile="{{ cis_rhel8_sudo_logfile }}"'
      state: present
      owner: root
      group: root
      mode: 0400
      create: true
      validate: 'visudo -cf %s'
    when:
      - sudo_logfiles.rc == 1
  when:
    - cis_rhel8_1_3_3
  tags:
    - scored
    - level1
    - section1

- name: 1.4.1 Ensure AIDE is installed (Scored)
  yum:
    name: aide
    state: installed
  when:
    - cis_rhel8_1_4_1
  tags:
    - scored
    - level1
    - section1

- name: 1.4.1  Ensure AIDE is installed (Scored)
  shell: /sbin/aide --init && mv /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
  args:
    creates: /var/lib/aide/aide.db.gz
  when:
    - cis_rhel8_1_4_1
  tags:
    - scored
    - level1
    - section1

- name: 1.4.2 Ensure filesystem integrity is regularly checked (Scored)
  cron:
    name: CIS 1.4.2 Ensure filesystem integrity is regularly checked
    weekday: "{{ cis_rhel8_aide_cron['weekday'] }}"
    minute: "{{ cis_rhel8_aide_cron['minute'] }}"
    hour: "{{ cis_rhel8_aide_cron['hour'] }}"
    user: "{{ cis_rhel8_aide_cron['user'] }}"
    job: "{{ cis_rhel8_aide_cron['job'] }}"
    cron_file: "{{ cis_rhel8_aide_cron['cron_file'] }}"
  when:
    - cis_rhel8_1_4_2
  tags:
    - scored
    - level1
    - section1

- name: 1.5.1 Ensure permissions on bootloader config are configured (Scored)
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0600
  when:
    - cis_rhel8_1_5_1
  tags:
    - scored
    - level1
    - section1
  with_items:
    - /boot/grub2/grubenv
    - /boot/grub2/grub.cfg

- name: 1.5.2 Ensure bootloader password is set (Scored) - generate password hash
  shell: >
    set -o pipefail ;
    echo -e "{{ cis_rhel8_grub_password }}\n{{ cis_rhel8_grub_password }}\n" |
    grub2-mkpasswd-pbkdf2 | sed -e '/PBKDF2 hash/!d' -e 's/PBKDF2 hash of your password is//'
  register: grub2_passwd
  changed_when: false
  when:
    - cis_rhel8_1_5_2
  tags:
    - scored
    - level1
    - section1

- name: 1.5.2 Ensure bootloader password is set (Scored) - check existing confif
  stat:
    path: /boot/grub2/user.cfg
  register: grub2_passwd_stat
  changed_when: false
  when:
    - cis_rhel8_1_5_2
  tags:
    - scored
    - level1
    - section1

- name: 1.5.2 Ensure bootloader password is set (Scored) - write config
  copy:
    dest: /boot/grub2/user.cfg
    content: "GRUB2_PASSWORD={{ grub2_passwd.stdout }}"
    owner: root
    group: root
    mode: 0600
  when:
    - cis_rhel8_1_5_2
    - not grub2_passwd_stat.stat.exists or cis_rhel8_reset_grub_password
  tags:
    - scored
    - level1
    - section1

- name: 1.5.3 Ensure authentication required for single user mode (Scored)
  ini_file:
    path: /usr/lib/systemd/system/{{ item }}.service
    section: Service
    no_extra_spaces: true
    option: ExecStart
    value: -/usr/lib/systemd/systemd-sulogin-shell {{ item }}
  with_items:
    - rescue
    - emergency
  tags:
    - scored
    - level1
    - section1
  notify: systemctl daemon-reload

- name: 1.6.1 Ensure core dumps are restricted (Scored)
  block:
    - name: 1.6.1 Ensure core dumps are restricted (Scored) -- search core config
      command: grep -Erl '^\s*hard\s+core\s+0\s*$' /etc/security/limits.conf /etc/security/limits.d
      register: hard_core
      failed_when: false
      changed_when: false

    - name: 1.6.1 Ensure core dumps are restricted (Scored) -- search suid dumpable config
      command: grep -Erl '^\s*fs\.suid_dumpable\*=\s*0$' /etc/sysctl.conf /etc/sysctl.d
      register: suid_dumpable
      failed_when: false
      changed_when: false

    - name: 1.6.1 Ensure core dumps are restricted (Scored) - create config core dump
      lineinfile:
        dest: /etc/security/limits.d/cis.conf
        line: "hard core 0"
        state: present
        owner: root
        group: root
        mode: 0644
        create: true
      when:
        - hard_core.rc != 0

    - name: 1.6.1 Ensure core dumps are restricted (Scored) - create config suid dumpable
      lineinfile:
        dest: /etc/sysctl.d/cis.conf
        line: "fs.suid_dumpable=0"
        state: present
        owner: root
        group: root
        mode: 0644
        create: true
      when:
        - suid_dumpable.rc != 0

    - name: 1.6.1 Ensure core dumps are restricted (Scored) - configure systemd-coredump
      ini_file:
        path: /etc/systemd/coredump.conf
        section: Coredump
        no_extra_spaces: true
        option: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict:
        Storage: none
        ProcessSizeMax: 0
      notify: systemctl daemon-reload
  when:
    - cis_rhel8_1_6_1
  tags:
    - scored
    - level1
    - section1

- name: 1.6.2 Ensure address space layout randomization (ASLR) is enabled (Scored) - search config
  command: grep -Er 'kernel\.randomize_va_space' /etc/sysctl.conf /etc/sysctl.d/
  register: aslr_enabled
  changed_when: false
  failed_when: false
  when:
    - cis_rhel8_1_6_1
  tags:
    - scored
    - level1
    - section1

- name: 1.6.2 Ensure address space layout randomization (ASLR) is enabled (Scored) - write config
  lineinfile:
    dest: /etc/sysctl.d/cis.conf
    line: "kernel.randomize_va_space = 2"
    state: present
    owner: root
    group: root
    mode: 0644
    create: true
  when:
    - cis_rhel8_1_6_1
    - aslr_enabled.rc == 1
  tags:
    - scored
    - level1
    - section1

- name: 1.7.1.1 Ensure SELinux is installed (Scored)
  yum:
    name: libselinux
    state: installed
  when:
    - cis_rhel8_1_7_1_1
  tags:
    - scored
    - level2
    - section1

- name: 1.7.1.2 Ensure SELinux is not disabled in bootloader configuration (Scored)
  replace:
    dest: /etc/default/grub
    regexp: '(selinux|enforcing)\s*=\s*0\s*'
    follow: true
  notify: update grub2
  when:
    - cis_rhel8_1_7_1_2
  tags:
    - scored
    - level2
    - section1

- name: "1.7.1.3 Ensure SELinux policy is configured (Scored)\n
  1.7.1.4 Ensure the SELinux state is enforcing (Scored)"
  selinux:
    conf: /etc/selinux/config
    policy: "{{ cis_rhel8_selinux_policy }}"
    state: "{{ cis_rhel8_selinux_state }}"
  when:
    - cis_rhel8_1_7_1_3
    - cis_rhel8_1_7_1_4
  tags:
    - scored
    - level2
    - section1

- name: 1.7.1.5 Ensure no unconfined services exist (Scored)
  command: /bin/true
  changed_when: false
  failed_when: false
  when:
    - cis_rhel8_1_7_1_5
  tags:
    - scored
    - level2
    - section1
    - notimplemented

- name: 1.7.1.6 Ensure SETroubleshoot is not installed (Scored)
  yum:
    name: setroubleshoot
    state: absent
  when:
    - cis_rhel8_1_7_1_6
  tags:
    - scored
    - level2
    - section1

- name: 1.7.1.7 Ensure the MCS Translation Service (mcstrans) is not installed (Scored)
  yum:
    name: mcstrans
    state: absent
  when:
    - cis_rhel8_1_7_1_7
  tags:
    - scored
    - section1

- name: "1.8.1.1 Ensure message of the day is configured properly (Scored)\n
  1.8.1.4 Ensure permissions on /etc/motd are configured (Scored)"
  template:
    src: etc/motd.j2
    dest: /etc/motd
    owner: root
    group: root
    mode: 0644
  when:
    - cis_rhel8_1_8_1_1
    - cis_rhel8_1_8_1_4
  tags:
    - scored
    - level1
    - section1

- name: "1.8.1.2 Ensure local login warning banner is configured properly (Scored)\n
  1.8.1.5 Ensure permissions on /etc/issue are configured (Scored)"
  template:
    src: etc/issue.j2
    dest: /etc/issue
    owner: root
    group: root
    mode: 0644
  when:
    - cis_rhel8_1_8_1_2
    - cis_rhel8_1_8_1_5
  tags:
    - scored
    - level1
    - section1

- name: "1.8.1.3 Ensure remote login warning banner is configured properly (Scored)\n
  1.8.1.6 Ensure permissions on /etc/issue.net are configured (Scored)"
  template:
    src: etc/issue.net.j2
    dest: /etc/issue.net
    owner: root
    group: root
    mode: 0644
  when:
    - cis_rhel8_1_8_1_3
    - cis_rhel8_1_8_1_6
  tags:
    - scored
    - level1
    - section1

- name: 1.8.2 Ensure GDM login banner is configured (Scored)
  template:
    src: etc/dm3/greeter.dconf-defaults.j2
    dest: /etc/dm3/greeter.dconf-defaults
    owner: root
    group: root
    mode: 0644
  when:
    - cis_rhel8_1_8_2
    - "'gdm' in ansible_facts.packages"
  tags:
    - scored
    - section1

- name: 1.9 Ensure updates, patches, and additional security software are installed (Scored)
  yum:
    name: '*'
    state: latest
  when:
    - cis_rhel8_1_9
  tags:
    - scored
    - level1
    - section1

- name: 1.10 Ensure system-wide crypto policy is not legacy (Scored) - check policy
  command: grep -E '^\s*(DEFAULT|FUTURE|FIPS)\s*$' /etc/crypto-policies/config
  changed_when: false
  failed_when: false
  when:
    - cis_rhel8_1_9 or cis_rhel8_1_10
  register: crypto_policy
  tags:
    - scored
    - level1
    - section1

- name: 1.10 Ensure system-wide crypto policy is not legacy (Scored)
  command: update-crypto-policies --set {{ cis_rhel8_crypto_policy }}
  when:
    - cis_rhel8_1_10
    - crypto_policy.stdout == 'LEGACY'
  tags:
    - scored
    - level1
    - section1

- name: 1.11 Ensure system-wide crypto policy is FUTURE or FIPS (Scored)
  command: update-crypto-policies --set {{ cis_rhel8_crypto_policy }}
  when:
    - cis_rhel8_1_11
    - crypto_policy.stdout == 'DEFAULT' or crypto_policy.stdout == 'LEGACY'
  tags:
    - scored
    - level2
    - section1
